" This is the vimrc of Francois Bernier

set nocompatible " This must be first, because it changes other options as a side effect.

" Begin vundle config
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'

"Bundle 'bbommarito/vim-slim'
Bundle 'chriskempson/vim-tomorrow-theme'
Bundle 'vim-scripts/harlequin'
"Bundle 'flazz/vim-colorschemes'
Bundle 'vim-ruby/vim-ruby'
Bundle 'tpope/vim-rake'
Bundle 'tpope/vim-rails'
Bundle 'Lokaltog/vim-powerline'
Bundle 'tpope/vim-markdown'
Bundle 'groenewege/vim-less'
Bundle 'pangloss/vim-javascript'
Bundle 'tpope/vim-haml'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-endwise'
Bundle 'hail2u/vim-css3-syntax'
Bundle 'ap/vim-css-color'
Bundle 'kchmck/vim-coffee-script'
Bundle 'majutsushi/tagbar'
Bundle 'scrooloose/syntastic'
Bundle 'ervandew/supertab'
Bundle 'evanmiller/nginx-vim-syntax'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/nerdcommenter'
Bundle 'kien/ctrlp.vim'
Bundle 'chrisbra/SudoEdit.vim'
Bundle 'jiangmiao/auto-pairs'
Bundle 'tpope/vim-surround'
Bundle 'guns/vim-clojure-static'
Bundle 'kien/rainbow_parentheses.vim'
Bundle 'epmatsw/ag.vim'

filetype plugin indent on
" End vundle config

syntax on

set hidden
set number
set ruler
set history=1000
set encoding=utf-8
set ignorecase
set smartcase
set scrolloff=5
set autoindent
set hlsearch
set autoread
set t_Co=256
set clipboard=unnamedplus

set background=dark
colorscheme harlequin "Tomorrow-Night-Bright
let mapleader = ","
nnoremap ; :
let g:Powerline_symbols = 'fancy'

" Close a buffer but not the split window
nmap ,d :b#<bar>bd#<CR>

" Indents a whole buffer
nmap <Leader>f gg=G

if has('gui_running')
  if has('gui_macvim')
    set guifont=Inconsolata:h15
  elseif has('gui_gtk2')
    set guifont=Droid\ Sans\ Mono\ for\ Powerline\ 12
  endif

  " Don't show scroll bars in the GUI
  set guioptions-=L
  set guioptions-=r
  set guioptions-=T  "remove toolbar
endif

" Whitespace stuff
set nowrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set list listchars=tab:\ \ ,trail:Â·

" Tab completion
set wildmenu
set wildmode=list:longest,list:full
set wildignore+=*/.svn/*,*/.hg/*,*/.git/*,*.o,*.obj,*.rbc,*.class,vendor/gems/*,*.DS_Store,*.rvmrc,*.gitignore,*.jpg,*.bmp,*.gif,*.png,*.jpeg,*.sw?,*.pyc

" Status bar
set laststatus=2

" who types jj anyway? 
imap jj <Esc>

" NERDTree configuration
let NERDTreeIgnore=['\.pyc$', '\.rbc$', '\~$']
map <Leader>n :NERDTreeToggle<CR>

" Remember last location in file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif
  autocmd VimEnter * set vb t_vb=
endif

" add json syntax highlighting
au BufNewFile,BufRead *.json set ft=javascript

" make Python follow PEP8 ( http://www.python.org/dev/peps/pep-0008/ )
au FileType python set softtabstop=4 tabstop=4 shiftwidth=4 textwidth=79

" Rainbow!
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" Enable syntastic syntax checking
let g:syntastic_enable_signs=1
let g:syntastic_quiet_warnings=1

" ack ouput
let g:ackprg="ack -H --nocolor --nogroup --column"

" Directories for swp files
set backupdir=~/.vim/backup
set directory=~/.vim/backup

" Show (partial) command in the status line
set showcmd

" tab to indent
vnoremap < <gv
vnoremap > >gv|
vnoremap <Tab> >gv|
vnoremap <S-Tab> <gv

map <leader>/ <plug>NERDCommenterToggle<CR>
imap <leader>/ <Esc><plug>NERDCommenterToggle<CR>i

" Unbind arrows {{{
nnoremap <Up> <Esc>
vnoremap <Up> <NOP>
inoremap <Up> <NOP>
nnoremap <Down> <Esc>
vnoremap <Down> <NOP>
inoremap <Down> <NOP>
nnoremap <Left> <Esc>
vnoremap <Left> <NOP>
inoremap <Left> <NOP>
nnoremap <Right> <Esc>
vnoremap <Right> <NOP>
inoremap <Right> <NOP>
" }}}

" tab next/previous and move tabs
nnoremap <C-Left> :tabprevious<CR>
nnoremap <C-Right> :tabnext<CR>
nnoremap <silent> <A-Left> :execute 'silent! tabmove ' . (tabpagenr()-2)<CR>
nnoremap <silent> <A-Right> :execute 'silent! tabmove ' . tabpagenr()<CR>
